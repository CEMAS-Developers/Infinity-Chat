{"version":3,"sources":["components/Button.js","config/firebase.js","components/Message.js","functions/fixSroll.js","components/Channel.js","components/Logo.js","login/signInWithGoogle.js","login/signOut.js","components/Login.js","hooks/useAuthState.js","components/Header.js","functions/renderLoading.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","children","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","formatDate","date","formattedDate","formatRelative","Date","charAt","toUpperCase","slice","Message","createdAt","text","displayName","photoURL","src","alt","title","seconds","fixSroll","window","scrollTo","top","left","behavior","Channel","user","useState","messages","setMessages","useEffect","collection","orderBy","limit","onSnapshot","querySnapshot","data","docs","map","doc","id","uid","newMessage","setNewMessage","messagesRef","inputRef","useRef","current","focus","message","onSubmit","e","preventDefault","trimmedMessage","trim","add","FieldValue","serverTimestamp","ref","type","value","onChange","target","placeholder","autoComplete","disabled","Logo","signInWithGoogle","a","useDeviceLanguage","signInWithPopup","console","error","signOut","Login","useAuthState","initializing","setInitializing","setUser","onAuthStateChanged","Header","renderLoading","App","itializing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.846e3ec0.chunk.js","sourcesContent":["import \"../styles/Button.css\";\n\nconst Button = ({ onClick = null, children = null }) => (\n  <button className=\"boton\" onClick={onClick}>\n    {\" \"}\n    {children}{\" \"}\n  </button>\n);\n\nexport default Button;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDpPgzWJT06ypoMdEl5oXWdT7nhiw2TGa8\",\n  authDomain: \"react-chat-7aa46.firebaseapp.com\",\n  projectId: \"react-chat-7aa46\",\n  storageBucket: \"react-chat-7aa46.appspot.com\",\n  messagingSenderId: \"587968426449\",\n  appId: \"1:587968426449:web:6d2d9fc0c6db589845f0f0\",\n  measurementId: \"G-VLKX3JZJ5D\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, googleAuthProvider, firebase };\n","import { formatRelative } from \"date-fns\";\nimport \"../styles/Message.css\";\n\nconst formatDate = (date) => {\n  let formattedDate = \"\";\n  if (date) {\n    formattedDate = formatRelative(date, new Date());\n\n    formattedDate =\n      formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\n  }\n  return formattedDate;\n};\n\nconst Message = ({\n  createdAt = null,\n  text = \"\",\n  displayName = \"\",\n  photoURL = \"\",\n}) => {\n  if (!text) return null;\n  return (\n    <div className=\"user\">\n      {photoURL ? (\n        <img\n          className=\"photo-user\"\n          src={photoURL}\n          alt=\"Avatar\"\n          title=\"{text}\"\n        />\n      ) : null}\n      {displayName ? <span className=\"name-user\">{displayName}</span> : null}\n      {createdAt?.seconds ? (\n        <span className=\"date-user\">\n          {formatDate(new Date(createdAt.seconds * 1000))}\n        </span>\n      ) : null}\n      <p className=\"mensaje-user\">{text}</p>\n    </div>\n  );\n};\n\nexport default Message;\n","const fixSroll = () => {\n  window.scrollTo({\n    top: 99999999999,\n    left: 0,\n    behavior: \"smooth\",\n  });\n};\n\nexport default fixSroll;\n","import { useEffect, useState, useRef } from \"react\";\nimport { db, firebase } from \"../config/firebase\";\nimport Message from \"./Message\";\nimport \"../styles/Channel.css\";\nimport fixSroll from \"../functions/fixSroll\";\n\nconst Channel = ({ user = null }) => {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const query = db.collection(\"messages\").orderBy(\"createdAt\").limit(100);\n\n    const unsubscribe = query.onSnapshot((querySnapshot) => {\n      //Obtiene todos los mensajes desde la bd con su ID.\n      const data = querySnapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      // Actualizo los mensajes obtenidos desde la bd.\n      setMessages(data);\n    });\n    //CleanUp\n    return unsubscribe;\n  }, []);\n\n  const { uid, displayName, photoURL } = user;\n  const [newMessage, setNewMessage] = useState(\"\");\n  const handleMessageOnChange = (e) => {\n    e.preventDefault();\n    setNewMessage(e.target.value);\n  };\n\n  const messagesRef = db.collection(\"messages\");\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    const trimmedMessage = newMessage.trim();\n    if (trimmedMessage) {\n      messagesRef.add({\n        text: trimmedMessage,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n        displayName,\n        photoURL,\n      });\n      setNewMessage(\"\");\n    }\n  };\n\n  const inputRef = useRef();\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [inputRef]);\n\n  return (\n    <>\n      <div className=\"messages-container\">\n        {messages.map((message) => (\n          <p key={message.id}>\n            <Message {...message} />\n          </p>\n        ))}\n      </div>\n\n      <form className=\"form\" onSubmit={handleOnSubmit}>\n        <input\n          className=\"mensaje\"\n          ref={inputRef}\n          type=\"text\"\n          value={newMessage}\n          onChange={handleMessageOnChange}\n          placeholder=\"Escribe tu mensaje aqui...\"\n          autoComplete=\"off\"\n        />\n\n        {/* <button className=\"btn-emoji\"></button> */}\n\n        <button\n          className=\"boton btn-send\"\n          type=\"submit\"\n          disabled={!newMessage}\n          onClick={fixSroll()}\n        >\n          {\" \"}\n          Enviar{\" \"}\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Channel;\n","import \"../styles/Logo.css\";\n\nconst Logo = () => {\n  return (\n    <img\n      src=\"https://i.imgur.com/hV5uceh.png\"\n      alt=\"Infinity Chat Logo\"\n      className=\"logo\"\n    ></img>\n  );\n};\n\nexport default Logo;\n","import { googleAuthProvider, firebase } from \"../config/firebase\";\n\nconst signInWithGoogle = async () => {\n  firebase.auth().useDeviceLanguage();\n\n  try {\n    await firebase.auth().signInWithPopup(googleAuthProvider);\n  } catch (e) {\n    console.error(e.message);\n  }\n};\n\nexport default signInWithGoogle;\n","import { firebase } from \"../config/firebase\";\n\nconst signOut = async () => {\n  try {\n    await firebase.auth().signOut();\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport default signOut;\n","import { signInWithGoogle } from \"../login\";\nimport Button from \"./Button\";\nimport \"../styles/Login.css\";\n\nconst Login = () => {\n  return (\n    <main>\n      <h2>¡Bienvenidos!</h2>\n      <img\n        src=\"https://blog.cpanel.com/wp-content/uploads/2019/08/user-01.png\"\n        alt=\"\"\n      ></img>\n      <Button onClick={signInWithGoogle}>Iniciar Sesión</Button>\n    </main>\n  );\n};\n\nexport default Login;\n","import { useState, useEffect } from \"react\";\n\nfunction useAuthState(auth) {\n  const [initializing, setInitializing] = useState(true);\n  const [user, setUser] = useState(true);\n\n  useEffect(() => {\n    const unsubcribe = auth.onAuthStateChanged((user) => {\n      if (user) setUser(user);\n      else setUser(false);\n\n      if (initializing) setInitializing(false);\n    });\n\n    return unsubcribe;\n  }, [auth, initializing]);\n\n  return { user, initializing };\n}\n\nexport default useAuthState;\n","import { signOut } from \"../login\";\nimport Button from \"./Button\";\nimport Logo from \"./Logo\";\nimport \"../styles/Header.css\";\nimport { useAuthState } from \"../hooks\";\nimport { firebase } from \"../config/firebase\";\n\nconst Header = () => {\n  const { user } = useAuthState(firebase.auth());\n  if (user) {\n    return (\n      <header className=\"menu\">\n        <Logo />\n        <h1>Infinity Chat</h1>\n        <Button onClick={signOut}> Salir </Button>\n      </header>\n    );\n  } else {\n    return (\n      <header className=\"menu\">\n        <Logo />\n        <h1>Infinity Chat</h1>\n        <div className=\"invisible-btn\"></div>\n      </header>\n    );\n  }\n};\n\nexport default Header;\n","const renderLoading = (data) => {\n  if (data)\n    return (\n      <div>\n        <h3>Loadinng...</h3>\n      </div>\n    );\n};\n\nexport default renderLoading;\n","import { Channel, Login, Header } from \"./components/\";\nimport { useAuthState } from \"./hooks\";\nimport { firebase } from \"./config/firebase\";\nimport \"./App.css\";\nimport renderLoading from \"./functions/renderLoading\";\nimport fixSroll from \"./functions/fixSroll\";\n\nfunction App() {\n  const { itializing, user } = useAuthState(firebase.auth());\n  return (\n    <div>\n      {renderLoading(itializing)}\n      {user ? (\n        <>\n          <Header />\n          <Channel user={user} />\n          {fixSroll()}\n        </>\n      ) : (\n        <>\n          <Header />\n          <Login />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}